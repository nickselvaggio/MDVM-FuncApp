{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Function App"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[format('st{0}', uniqueString(resourceGroup().id))]",
            "maxLength": 24,
            "metadata": {
                "description": "Name of the storage account (must be globally unique, 3-24 lowercase letters/numbers)"
            }
        },
        "applicationInsightsName": {
            "type": "string",
            "defaultValue": "[format('appi-{0}', parameters('functionAppName'))]",
            "metadata": {
                "description": "Name of Application Insights instance"
            }
        },
        "hostingPlanName": {
            "type": "string",
            "defaultValue": "[format('plan-{0}', parameters('functionAppName'))]",
            "metadata": {
                "description": "Name of the App Service Plan (Flex Consumption)"
            }
        },
        "managedIdentityName": {
            "type": "string",
            "defaultValue": "[format('id-{0}', parameters('functionAppName'))]",
            "metadata": {
                "description": "Name of the user-assigned managed identity"
            }
        },
        "pythonVersion": {
            "type": "string",
            "defaultValue": "3.11",
            "allowedValues": [
                "3.9",
                "3.10",
                "3.11",
                "3.12"
            ],
            "metadata": {
                "description": "Python runtime version"
            }
        },
        "maximumInstanceCount": {
            "type": "int",
            "defaultValue": 40,
            "minValue": 1,
            "maxValue": 1000,
            "metadata": {
                "description": "Maximum number of instances for Flex Consumption plan"
            }
        },
        "instanceMemoryMB": {
            "type": "int",
            "defaultValue": 2048,
            "allowedValues": [
                2048,
                4096
            ],
            "metadata": {
                "description": "Memory per instance in MB"
            }
        },
        "logAnalyticsWorkspaceResourceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional: Resource ID of existing Log Analytics Workspace for Application Insights"
            }
        },
        "aadTenantId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Azure AD Tenant ID for Microsoft Defender API authentication"
            }
        },
        "aadClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Azure AD Application (Client) ID for Microsoft Defender API authentication"
            }
        },
        "aadClientSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Azure AD Application Client Secret for Microsoft Defender API authentication"
            }
        },
        "aadResourceAppIdUri": {
            "type": "string",
            "defaultValue": "https://api.securitycenter.microsoft.com",
            "metadata": {
                "description": "Microsoft Defender API Resource URI"
            }
        }
    },
    "variables": {
        "appInsightsLocation": "[if(or(equals(parameters('location'), 'canadacentral'), equals(parameters('location'), 'Canada Central')), 'canadacentral', parameters('location'))]",
        "useLogAnalytics": "[not(empty(parameters('logAnalyticsWorkspaceResourceId')))]",
        "appPackageContainerName": "[format('app-package-{0}', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "name": "[parameters('managedIdentityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "defaultToOAuthAuthentication": true,
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default', parameters('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default', parameters('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default', parameters('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default', parameters('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/{1}', parameters('storageAccountName'), variables('appPackageContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/azure-webjobs-hosts', parameters('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/azure-webjobs-secrets', parameters('storageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('applicationInsightsName')]",
            "location": "[variables('appInsightsLocation')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[if(variables('useLogAnalytics'), parameters('logAnalyticsWorkspaceResourceId'), null())]",
                "IngestionMode": "[if(variables('useLogAnalytics'), 'LogAnalytics', 'ApplicationInsights')]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-01-01",
            "name": "[parameters('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "FC1",
                "tier": "FlexConsumption"
            },
            "kind": "functionapp",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-01-01",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', variables('appPackageContainerName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
                "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned, UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]": {}
                }
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "reserved": true,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage__accountName",
                            "value": "[parameters('storageAccountName')]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "AAD_TENANT_ID",
                            "value": "[parameters('aadTenantId')]"
                        },
                        {
                            "name": "AAD_CLIENT_ID",
                            "value": "[parameters('aadClientId')]"
                        },
                        {
                            "name": "AAD_CLIENT_SECRET",
                            "value": "[parameters('aadClientSecret')]"
                        },
                        {
                            "name": "AAD_RESOURCE_APP_ID_URI",
                            "value": "[parameters('aadResourceAppIdUri')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": false,
                    "ftpsState": "FtpsOnly",
                    "minTlsVersion": "1.2"
                },
                "functionAppConfig": {
                    "deployment": {
                        "storage": {
                            "type": "blobContainer",
                            "value": "[format('{0}default/{1}', reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, variables('appPackageContainerName'))]",
                            "authentication": {
                                "type": "UserAssignedIdentity",
                                "userAssignedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
                            }
                        }
                    },
                    "runtime": {
                        "name": "python",
                        "version": "[parameters('pythonVersion')]"
                    },
                    "scaleAndConcurrency": {
                        "maximumInstanceCount": "[parameters('maximumInstanceCount')]",
                        "instanceMemoryMB": "[parameters('instanceMemoryMB')]"
                    }
                },
                "httpsOnly": true,
                "publicNetworkAccess": "Enabled",
                "clientAffinityEnabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/ftp', parameters('functionAppName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            ],
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/scm', parameters('functionAppName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            ],
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
            "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('managedIdentityName'), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
                "principalType": "ServicePrincipal"
            }
        }
    ],
    "outputs": {
        "functionAppName": {
            "type": "string",
            "value": "[parameters('functionAppName')]"
        },
        "functionAppHostName": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-01-01').defaultHostName]"
        },
        "functionAppResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageAccountName')]"
        },
        "applicationInsightsName": {
            "type": "string",
            "value": "[parameters('applicationInsightsName')]"
        },
        "applicationInsightsInstrumentationKey": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
        },
        "managedIdentityPrincipalId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]"
        },
        "managedIdentityClientId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').clientId]"
        }
    }
}
